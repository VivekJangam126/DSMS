{"file_contents":{"style.css":{"content":"/* ========== Base ========== */\nbody {\n  margin: 0;\n  font-family: 'Inter', 'Segoe UI', Arial, sans-serif;\n  background: #f5f6fa;\n  color: #23272f;\n  min-height: 100vh;\n  transition: background 0.2s;\n}\na { color: #1a4be7; text-decoration: none; }\na:hover { text-decoration: underline; }\n\n/* ========== Auth Card ========== */\n.auth-main {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n}\n.auth-card {\n  background: #fff;\n  border-radius: 16px;\n  box-shadow: 0 6px 32px rgba(15, 23, 42, 0.09);\n  padding: 32px 36px 24px 36px;\n  width: 350px;\n  max-width: 98vw;\n  position: relative;\n  animation: cardFadeIn 0.7s cubic-bezier(.53,1.87,.42,1.01);\n}\n@keyframes cardFadeIn {\n  from { opacity: 0; transform: translateY(-30px);}\n  to { opacity: 1; transform: none;}\n}\n.auth-tabs {\n  display: flex;\n  margin-bottom: 22px;\n}\n.auth-tab {\n  flex: 1;\n  padding: 12px 0;\n  font-weight: 500;\n  background: none;\n  border: none;\n  border-bottom: 2.5px solid transparent;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: border-color 0.2s, color 0.2s;\n}\n.auth-tab.active {\n  border-bottom: 2.5px solid #1a4be7;\n  color: #1a4be7;\n}\n.auth-title {\n  font-size: 1.45rem;\n  font-weight: 700;\n  margin-bottom: 20px;\n  text-align: center;\n}\n\n/* ========== Form Styles ========== */\n.form-group {\n  margin-bottom: 18px;\n}\nlabel {\n  display: block;\n  font-size: 0.95rem;\n  font-weight: 500;\n  margin-bottom: 5px;\n}\ninput[type=\"text\"], input[type=\"email\"], input[type=\"password\"], input[type=\"date\"] {\n  width: 100%;\n  padding: 11px 12px;\n  border: 1.5px solid #d7dae7;\n  border-radius: 7px;\n  font-size: 1rem;\n  outline: none;\n  background: #f5f6fa;\n  transition: border-color 0.2s;\n}\ninput:focus {\n  border-color: #1a4be7;\n}\n\n/* ========== Buttons ========== */\n.btn {\n  padding: 11px 0;\n  width: 100%;\n  border-radius: 7px;\n  border: none;\n  background: #1a4be7;\n  color: #fff;\n  font-weight: 600;\n  font-size: 1.05rem;\n  cursor: pointer;\n  margin-bottom: 10px;\n  box-shadow: 0 2px 8px rgba(26,75,231,0.06);\n  transition: background 0.18s, box-shadow 0.18s, transform 0.15s;\n  position: relative;\n}\n.btn:hover, .btn:focus { background: #1751c2; box-shadow: 0 4px 16px rgba(26,75,231,0.11); transform: translateY(-2px);}\n.btn:disabled, .btn.loading { background: #c9d2e9; cursor: not-allowed;}\n.btn-metamask {\n  background: #f5f6fa;\n  color: #1a4be7;\n  border: 1.5px solid #d7dae7;\n}\n.btn-metamask:hover { background: #e9ecfa; }\n\n/* ========== Feedback States ========== */\n.auth-message {\n  font-size: 0.98rem;\n  margin: 8px 0 2px 0;\n  padding: 7px 10px;\n  border-radius: 6px;\n  display: none;\n  background: #f7f7fd;\n  color: #d23333;\n  border: 1.5px solid #f3d6db;\n  transition: background 0.18s, color 0.18s;\n}\n.auth-message.success {\n  color: #147b4c;\n  border-color: #c7f3dd;\n  background: #e7fcef;\n}\n\n/* ========== Sidebar Navigation ========== */\n.sidebar {\n  background: #fff;\n  width: 220px;\n  min-height: 100vh;\n  box-shadow: 0 2px 12px rgba(15,23,42,0.06);\n  position: fixed;\n  left: 0; top: 0;\n  z-index: 9;\n  display: flex; flex-direction: column;\n  padding-top: 32px;\n  animation: sidebarIn 0.6s cubic-bezier(.53,1.87,.42,1.01);\n}\n@keyframes sidebarIn {\n  from { opacity: 0; transform: translateX(-40px);}\n  to { opacity: 1; transform: none;}\n}\n.sidebar .nav-list {\n  list-style: none;\n  padding: 0 0 0 0;\n  margin: 0 0 42px 0;\n}\n.sidebar .nav-list li {\n  margin: 0 0 6px 0;\n}\n.sidebar .nav-link {\n  display: flex; align-items: center;\n  padding: 11px 18px;\n  border-radius: 8px;\n  font-weight: 500;\n  color: #23272f;\n  transition: background 0.16s, color 0.16s;\n  position: relative;\n}\n.sidebar .nav-link.active,\n.sidebar .nav-link:hover {\n  background: #e9ecfa;\n  color: #1a4be7;\n}\n.sidebar .nav-link .nav-icon {\n  margin-right: 10px;\n  font-size: 1.22em;\n}\n.sidebar .nav-badge {\n  background: #ff3651;\n  color: #fff;\n  font-size: 0.87em;\n  border-radius: 50%;\n  padding: 3px 8px;\n  margin-left: auto;\n}\n\n/* ========== Main Content ========== */\n.main-content {\n  margin-left: 220px;\n  padding: 39px 48px;\n  min-height: 100vh;\n}\n@media (max-width: 900px) {\n  .sidebar { width: 62px; padding-top: 20px; }\n  .sidebar .nav-link { padding: 9px 10px; font-size: 0.99em; }\n  .main-content { margin-left: 62px; padding: 29px 10px;}\n}\n\n/* ========== Summary Cards ========== */\n.summary-cards {\n  display: flex; gap: 22px;\n  margin-bottom: 34px;\n}\n.summary-card {\n  background: #fff;\n  border-radius: 12px;\n  box-shadow: 0 2px 16px rgba(15,23,42,0.07);\n  flex: 1 1 0;\n  padding: 23px 18px 18px 21px;\n  min-width: 135px;\n  display: flex; flex-direction: column; align-items: flex-start;\n  transition: box-shadow 0.18s;\n  position: relative;\n}\n.summary-card:hover { box-shadow: 0 4px 24px rgba(26,75,231,0.11);}\n.summary-card .summary-title {\n  font-size: 1.07em;\n  font-weight: 500;\n  color: #717d98;\n  margin-bottom: 7px;\n}\n.summary-card .summary-value {\n  font-size: 1.35em;\n  font-weight: 700;\n  color: #23272f;\n  margin-bottom: 3px;\n}\n.summary-card .summary-extra {\n  font-size: 0.93em;\n  color: #b3b9c8;\n}\n\n/* ========== Quick Actions ========== */\n.quick-actions {\n  display: flex; gap: 16px;\n  margin-bottom: 24px;\n}\n.quick-actions .btn {\n  width: auto;\n  min-width: 165px;\n  padding: 11px 18px;\n  margin-bottom: 0;\n  font-size: 1.02em;\n  box-shadow: 0 2px 8px rgba(26,75,231,0.06);\n}\n\n/* ========== Documents Table/List ========== */\n.documents-section {\n  background: #fff;\n  border-radius: 13px;\n  box-shadow: 0 2px 16px rgba(15,23,42,0.07);\n  padding: 24px 18px;\n  margin-bottom: 30px;\n}\n.documents-section h3 {\n  font-size: 1.13em;\n  font-weight: 600;\n  margin-bottom: 10px;\n}\n.documents-section .desc {\n  font-size: 0.97em;\n  color: #7c829b;\n  margin-bottom: 14px;\n}\n.table {\n  width: 100%;\n  border-collapse: collapse;\n}\n.table th, .table td {\n  padding: 13px 10px;\n  border-bottom: 1.5px solid #f3f3fa;\n  text-align: left;\n}\n.table th {\n  font-weight: 600;\n  color: #5c637c;\n  background: #f5f6fa;\n}\n.table tr:last-child td {\n  border-bottom: none;\n}\n.status-tag {\n  display: inline-block;\n  padding: 4px 14px;\n  border-radius: 18px;\n  font-size: 0.95em;\n  font-weight: 500;\n  letter-spacing: 0.5px;\n}\n.status-tag.shared { background: #e7eaf3; color: #3d4a66;}\n.status-tag.active { background: #191e25; color: #fff;}\n.status-tag.revoked { background: #e63a3a; color: #fff;}\n.status-tag.expired { background: #e7eaf3; color: #74798c;}\n.status-tag.success { background: #1a4be7; color: #fff;}\n.status-tag.failed { background: #e63a3a; color: #fff;}\n.status-tag.warning { background: #f6be1b; color: #fff;}\n\n/* ========== Modal Styles (Upload) ========== */\n.modal {\n  display: none;\n  position: fixed;\n  left: 0; top: 0; width: 100vw; height: 100vh;\n  background: rgba(34,36,44,0.18);\n  align-items: center; justify-content: center;\n  z-index: 999;\n  animation: modalIn 0.3s cubic-bezier(.53,1.87,.42,1.01);\n}\n@keyframes modalIn {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}\n.modal.active { display: flex; }\n.modal-content {\n  background: #fff;\n  border-radius: 14px;\n  box-shadow: 0 6px 32px rgba(15,23,42,0.17);\n  padding: 38px 38px 22px 38px;\n  min-width: 345px;\n  max-width: 97vw;\n  animation: cardFadeIn 0.5s cubic-bezier(.53,1.87,.42,1.01);\n  position: relative;\n}\n.close-modal {\n  position: absolute;\n  top: 18px; right: 22px;\n  font-size: 1.3em;\n  color: #b3b9c8;\n  background: none;\n  border: none;\n  cursor: pointer;\n  transition: color 0.18s;\n}\n.close-modal:hover { color: #e63a3a; }\n\n/* ========== Drag & Drop Zone ========== */\n.drop-zone {\n  border: 2.5px dashed #c7d0e9;\n  border-radius: 13px;\n  padding: 38px 0 21px 0;\n  text-align: center;\n  background: #f5f6fa;\n  cursor: pointer;\n  margin-bottom: 22px;\n  transition: border-color 0.21s, background 0.21s;\n}\n.drop-zone.hover {\n  border-color: #1a4be7;\n  background: #e9ecfa;\n}\n.drop-zone svg {\n  margin-bottom: 9px;\n  color: #1a4be7;\n  font-size: 2.1em;\n}\n.drop-zone-label { font-size: 1.11em; color: #5c637c; margin-bottom: 2px;}\n.drop-zone-desc { font-size: 0.96em; color: #a9adc1;}\n\n/* ========== Spinner ========== */\n.spinner, .btn.loading:after {\n  display: inline-block;\n  width: 18px; height: 18px;\n  border-radius: 50%;\n  border: 2.5px solid #e9ecfa;\n  border-top: 2.5px solid #1a4be7;\n  animation: spin 0.8s linear infinite;\n  vertical-align: middle;\n  margin-left: 7px;\n}\n@keyframes spin {\n  100% { transform: rotate(360deg);}\n}\n\n/* ========== Responsive ========== */\n@media (max-width: 600px) {\n  .auth-card { padding: 16px 9px;}\n  .main-content { padding: 11px 3vw;}\n  .summary-cards { flex-direction: column; gap: 12px;}\n  .documents-section { padding: 10px 5px;}\n  .modal-content { min-width: 99vw; padding: 18px 4vw;}\n}\n\n/* ========== Transitions ========== */\n.btn, .auth-card, .modal-content, .sidebar, .summary-card, .documents-section, .drop-zone {\n  transition: box-shadow 0.18s, background 0.19s, color 0.18s, transform 0.18s;\n}\n\n.upload-status {\n  min-height: 28px;\n  margin-bottom: 12px;\n  font-size: 1.03em;\n  font-weight: 500;\n  transition: color 0.2s;\n}\n.spinner {\n  border: 2.5px solid #e9ecfa;\n  border-top: 2.5px solid #1a4be7;\n  border-radius: 50%;\n  width: 18px;\n  height: 18px;\n  display: inline-block;\n  animation: spin 0.8s linear infinite;\n  vertical-align: middle;\n}\n@keyframes spin { 100% { transform: rotate(360deg); } }","size_bytes":9271},"script.js":{"content":"// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC4QwcMK93Hp1blRZRH9o9P2n1nLh8nOyg\",\n  authDomain: \"dsms-c67f6.firebaseapp.com\",\n  projectId: \"dsms-c67f6\",\n  storageBucket: \"dsms-c67f6.firebasestorage.app\",\n  databaseURL: \"https://dsms-c67f6-default-rtdb.firebaseio.com/\",\n  messagingSenderId: \"179646586869\",\n  appId: \"1:179646586869:web:ef7e431b1aa36fac994abc\",\n  measurementId: \"G-B2WV2LRJJE\"\n};\nconst pinataJWT = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySW5mb3JtYXRpb24iOnsiaWQiOiI4MWQwOGY2My05MmU2LTRlNjMtOWVmYy0wNjQyNjhiN2UzM2EiLCJlbWFpbCI6InZpdmVramFuZ2FtMTI2QGdtYWlsLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJwaW5fcG9saWN5Ijp7InJlZ2lvbnMiOlt7ImRlc2lyZWRSZXBsaWNhdGlvbkNvdW50IjoxLCJpZCI6IkZSQTEifSx7ImRlc2lyZWRSZXBsaWNhdGlvbkNvdW50IjoxLCJpZCI6Ik5ZQzEifV0sInZlcnNpb24iOjF9LCJtZmFfZW5hYmxlZCI6ZmFsc2UsInN0YXR1cyI6IkFDVElWRSJ9LCJhdXRoZW50aWNhdGlvblR5cGUiOiJzY29wZWRLZXkiLCJzY29wZWRLZXlLZXkiOiI1YmI5ODU3MjQ5Njk2ZTEwNTc5OCIsInNjb3BlZEtleVNlY3JldCI6Ijk0NjhjYzNjN2JjMjljNjY0Mzc1NTkwYWQ1M2FmMDMzNTE3NTYzM2RiOGQyNzBmMmFhOTYxYTExYjkxZTEwZjciLCJleHAiOjE3OTE0NzA3NDR9.G-AmgSYnT2VZTCn-n-j2eXvo9GVj54fcSCJs0JZRRIM\";\n\n\nif (!window.firebase?.apps?.length) {\n  firebase.initializeApp(firebaseConfig);\n}\nconst db = firebase.database();\nconst auth = firebase.auth();\n\nconst protectedPages = [\n  \"dashboard.html\",\n  \"documents.html\"\n];\nconst currentPage = window.location.pathname.split(\"/\").pop();\n\nfunction showMsg(id, msg, type = \"error\") {\n  const el = document.getElementById(id);\n  if (!el) return;\n  el.textContent = msg;\n  el.className = \"auth-message \" + type;\n  el.style.display = msg ? \"block\" : \"none\";\n}\n\nfunction showDocumentsMsg(msg, type = \"success\", id = \"documentsMessage\") {\n  const el = document.getElementById(id);\n  if (!el) return;\n  el.textContent = msg;\n  el.className = \"auth-message \" + type;\n  el.style.display = msg ? \"block\" : \"none\";\n  setTimeout(() => { el.style.display = \"none\"; }, 2000);\n}\n\nfunction spinnerHtml() {\n  return `<span class=\"spinner\" style=\"margin-right:8px;display:inline-block;width:18px;height:18px;border-radius:50%;border:2.5px solid #e9ecfa;border-top:2.5px solid #1a4be7;animation:spin 0.8s linear infinite;vertical-align:middle;\"></span>`;\n}\n\nfunction setBtnLoading(btnId, loading) {\n  const btn = document.getElementById(btnId);\n  if (!btn) return;\n  btn.disabled = loading;\n  btn.classList.toggle(\"loading\", loading);\n}\n\nfunction updateUploadStatus(message, type = \"info\") {\n  const statusDiv = document.getElementById(\"uploadStatus\");\n  if (!statusDiv) return;\n  let color = \"#1a4be7\";\n  let icon = \"\";\n  if (type === \"success\") { color = \"#147b4c\"; icon = \"✅ \"; }\n  else if (type === \"error\") { color = \"#d23333\"; icon = \"❌ \"; }\n  else if (type === \"info\") { color = \"#8b5cf6\"; icon = \"\"; }\n  else if (type === \"loading\") { icon = spinnerHtml(); }\n  statusDiv.innerHTML = `<span style=\"color:${color};font-weight:500;\">${icon}${message}</span>`;\n}\n\nasync function uploadToIPFS(file) {\n  const url = \"https://api.pinata.cloud/pinning/pinFileToIPFS\";\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  try {\n    const res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": `Bearer ${pinataJWT}`\n      },\n      body: formData\n    });\n    const json = await res.json();\n    console.log(\"Pinata response:\", json);\n    if (!res.ok || !json.IpfsHash) {\n      throw new Error('Pinata API Error: ' + (json.error || res.statusText));\n    }\n    return json.IpfsHash;\n  } catch (err) {\n    throw new Error(\"IPFS upload failed: \" + err.message);\n  }\n}\n\n// --- Unpin from Pinata when deleting ---\nasync function deleteFromPinata(ipfsCid) {\n  const url = `https://api.pinata.cloud/pinning/unpin/${ipfsCid}`;\n  try {\n    const res = await fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        \"Authorization\": `Bearer ${pinataJWT}`\n      }\n    });\n    if (!res.ok) {\n      try {\n        const json = await res.json();\n        console.error(\"Pinata unpin error:\", json);\n      } catch (err) {}\n      throw new Error('Pinata Unpin API Error: ' + res.statusText);\n    }\n    return true;\n  } catch (err) {\n    console.error(\"Unpin error:\", err);\n    return false;\n  }\n}\n\nasync function fetchDocuments(uid) {\n  try {\n    const snap = await db.ref(`documents/${uid}`).once(\"value\");\n    const docs = snap.val() || {};\n    return Object.entries(docs).map(([id, doc]) => ({ id, ...doc }));\n  } catch (err) { return []; }\n}\n\nasync function fetchActiveShares(uid) {\n  try {\n    const snap = await db.ref(\"shares\").orderByChild(\"userId\").equalTo(uid).once(\"value\");\n    const shares = snap.val() || {};\n    return Object.entries(shares).map(([id, share]) => ({ id, ...share })).filter(s => s.status === \"Active\");\n  } catch (err) { return []; }\n}\n\nasync function renderDashboardSummary(user) {\n  if (!user) return;\n  const docs = await fetchDocuments(user.uid);\n  const shares = await fetchActiveShares(user.uid);\n  const docEl = document.getElementById(\"totalDocuments\");\n  if (docEl) docEl.textContent = docs.length;\n  const shareEl = document.getElementById(\"totalShares\");\n  if (shareEl) shareEl.textContent = shares.length;\n  const storageUsed = docs.reduce((acc, doc) => acc + (doc.size || 0), 0);\n  const storageEl = document.getElementById(\"storageUsed\");\n  if (storageEl) storageEl.textContent = (storageUsed / (1024 * 1024)).toFixed(2) + \" MB\";\n}\n\nasync function renderDocuments(user) {\n  if (!user) return;\n  const docs = await fetchDocuments(user.uid);\n  const table = document.getElementById(\"documentsTable\");\n  if (!table) return;\n  if (!docs.length) {\n    table.innerHTML = `<tr><td colspan=\"6\">No documents found.</td></tr>`;\n    return;\n  }\n  table.innerHTML = docs.map(doc => `\n    <tr>\n      <td>${doc.fileName}</td>\n      <td>${(doc.size/1024).toFixed(2)} KB</td>\n      <td>${new Date(doc.uploadDate).toLocaleDateString()}</td>\n      <td><a href=\"https://ipfs.io/ipfs/${doc.ipfsCid}\" target=\"_blank\">${doc.ipfsCid}</a></td>\n      <td><span class=\"status-tag\">${doc.status}</span></td>\n      <td>\n        <button class=\"doc-action\" title=\"Share\" onclick=\"openShareModal('${doc.id}', '${doc.fileName}')\">🔗</button>\n        <button class=\"doc-action\" title=\"Permissions\" onclick=\"openPermissionsModal('${doc.id}')\">🔒</button>\n        <button class=\"doc-action\" title=\"Revoke\" onclick=\"revokeDocument('${doc.id}')\">🚫</button>\n        <button class=\"doc-action\" title=\"Delete\" onclick=\"deleteDocument('${doc.id}', '${doc.ipfsCid}')\">🗑️</button>\n      </td>\n    </tr>\n  `).join(\"\");\n}\n\n// --- Actions ---\nwindow.openShareModal = async function(docId, fileName) {\n  const shareModal = document.getElementById(\"shareModal\");\n  const shareModalContent = document.getElementById(\"shareModalContent\");\n  if (!shareModal || !shareModalContent) return;\n  shareModal.style.display = \"flex\";\n  shareModalContent.innerHTML = `\n    <div>\n      <strong>Sharing \"${fileName}\"</strong>\n      <div style=\"margin:10px 0;\">\n        <label>Permission:\n          <select id=\"sharePermission\">\n            <option value=\"View-only\">View-only</option>\n            <option value=\"Download\">Download Allowed</option>\n          </select>\n        </label>\n      </div>\n      <button id=\"generateShareLinkBtn\" class=\"btn btn-primary\">Generate Secure Link</button>\n      <div id=\"shareLinkResult\" style=\"margin-top:12px;\"></div>\n    </div>\n  `;\n  document.getElementById(\"generateShareLinkBtn\").onclick = async () => {\n    const permission = document.getElementById(\"sharePermission\").value;\n    const user = auth.currentUser;\n    if (!user) return;\n    const shareId = \"share_\" + Date.now() + \"_\" + Math.random().toString(36).substring(2, 8);\n    const link = `${window.location.origin}/view.html?share=${shareId}`;\n    await db.ref(`shares/${shareId}`).set({\n      documentId: docId,\n      userId: user.uid,\n      permission,\n      status: \"Active\",\n      link,\n      createdAt: Date.now()\n    });\n    document.getElementById(\"shareLinkResult\").innerHTML = `\n      <div>\n        <strong>Share Link:</strong>\n        <a href=\"${link}\" target=\"_blank\">${link}</a>\n        <span class=\"status-tag\">Active</span>\n      </div>\n    `;\n    renderDashboardSummary(user);\n    renderDocuments(user);\n  };\n  document.getElementById(\"closeShareModal\").onclick = () => {\n    shareModal.style.display = \"none\";\n    shareModalContent.innerHTML = \"\";\n  };\n};\n\nwindow.openPermissionsModal = function(docId) {\n  alert(\"Permissions logic can be extended here for document \" + docId);\n};\n\nwindow.revokeDocument = async function(docId) {\n  const user = auth.currentUser;\n  if (!user) return;\n  const sharesSnap = await db.ref(\"shares\").orderByChild(\"documentId\").equalTo(docId).once(\"value\");\n  const shares = sharesSnap.val() || {};\n  for (let [id, share] of Object.entries(shares)) {\n    if (share.userId === user.uid && share.status === \"Active\") {\n      await db.ref(`shares/${id}/status`).set(\"Revoked\");\n    }\n  }\n  renderDashboardSummary(user);\n  renderDocuments(user);\n};\n\nwindow.deleteDocument = async function(docId, ipfsCid) {\n  const user = auth.currentUser;\n  if (!user) return;\n  // Unpin from Pinata first\n  if (ipfsCid) {\n    await deleteFromPinata(ipfsCid);\n  }\n  await db.ref(`documents/${user.uid}/${docId}`).remove();\n  showDocumentsMsg(\"Document deleted!\", \"success\");\n  renderDashboardSummary(user);\n  renderDocuments(user);\n};\n\n// --- File upload logic ---\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const uploadModalBtn = document.getElementById(\"uploadModalBtn\");\n  const uploadModal = document.getElementById(\"uploadModal\");\n  const closeUploadModal = document.getElementById(\"closeUploadModal\");\n  const dropZone = document.getElementById(\"dropZone\");\n  const fileInput = document.getElementById(\"uploadFile\");\n  const dropZoneLabel = document.getElementById(\"dropZoneLabel\");\n  const dropZoneDesc = document.getElementById(\"dropZoneDesc\");\n  let selectedFile = null;\n\n  if (uploadModalBtn && uploadModal && closeUploadModal) {\n    uploadModalBtn.addEventListener(\"click\", () => {\n      uploadModal.classList.add(\"active\");\n      resetUploadModal();\n    });\n    closeUploadModal.addEventListener(\"click\", () => {\n      uploadModal.classList.remove(\"active\");\n      resetUploadModal();\n    });\n  }\n\n  function resetUploadModal() {\n    selectedFile = null;\n    if (fileInput) fileInput.value = \"\";\n    if (dropZoneLabel) dropZoneLabel.textContent = \"Drop your file here\";\n    if (dropZoneDesc) dropZoneDesc.textContent = \"or click to browse\";\n    updateUploadStatus(\"\");\n    setBtnLoading(\"uploadBtn\", false);\n    showMsg(\"uploadMessage\", \"\");\n  }\n\n  if (dropZone && fileInput) {\n    dropZone.addEventListener(\"dragover\", e => {\n      e.preventDefault();\n      dropZone.classList.add(\"hover\");\n    });\n    dropZone.addEventListener(\"dragleave\", e => {\n      dropZone.classList.remove(\"hover\");\n    });\n    dropZone.addEventListener(\"drop\", e => {\n      e.preventDefault();\n      dropZone.classList.remove(\"hover\");\n      if (e.dataTransfer.files.length) {\n        fileInput.files = e.dataTransfer.files;\n        handleFileSelected(fileInput.files[0]);\n      }\n    });\n    fileInput.addEventListener(\"change\", e => {\n      if (fileInput.files.length) {\n        handleFileSelected(fileInput.files[0]);\n      }\n    });\n  }\n\n  function handleFileSelected(file) {\n    selectedFile = file;\n    if (!file) {\n      if (dropZoneLabel) dropZoneLabel.textContent = \"Drop your file here\";\n      if (dropZoneDesc) dropZoneDesc.textContent = \"or click to browse\";\n      updateUploadStatus(\"\");\n      return;\n    }\n    if (dropZoneLabel) dropZoneLabel.textContent = file.name;\n    if (dropZoneDesc) dropZoneDesc.textContent = `${(file.size/1024).toFixed(2)} KB`;\n    updateUploadStatus(\"File ready for upload.\", \"info\");\n  }\n\n  const uploadForm = document.getElementById(\"uploadForm\");\n  if (uploadForm) {\n    uploadForm.addEventListener(\"submit\", async function(e) {\n      e.preventDefault();\n      setBtnLoading(\"uploadBtn\", true);\n      updateUploadStatus(\"Uploading, please wait...\", \"loading\");\n      showMsg(\"uploadMessage\", \"\");\n      const file = selectedFile || (fileInput && fileInput.files[0]);\n      if (!file) {\n        updateUploadStatus(\"❌ Please select a file before uploading.\", \"error\");\n        setBtnLoading(\"uploadBtn\", false);\n        return;\n      }\n      if (file.size > 10 * 1024 * 1024) {\n        updateUploadStatus(\"❌ File too large (max 10MB).\", \"error\");\n        setBtnLoading(\"uploadBtn\", false);\n        return;\n      }\n      try {\n        const user = auth.currentUser;\n        if (!user) throw new Error(\"User not authenticated.\");\n        const cid = await uploadToIPFS(file);\n        const meta = {\n          fileName: file.name,\n          size: file.size,\n          type: file.type,\n          uploadDate: Date.now(),\n          ipfsCid: cid,\n          status: \"Active\",\n          shares: 0,\n          userId: user.uid\n        };\n        await db.ref(`documents/${user.uid}`).push(meta);\n        updateUploadStatus(\"✅ Upload successful!\", \"success\");\n        showDocumentsMsg(`File \"${file.name}\" uploaded successfully!`, \"success\");\n        setTimeout(() => {\n          if (uploadModal) uploadModal.classList.remove(\"active\");\n          resetUploadModal();\n          renderDashboardSummary(user);\n          renderDocuments(user);\n        }, 1500);\n      } catch (err) {\n        updateUploadStatus(\"❌ Upload failed. Please try again.\", \"error\");\n        setBtnLoading(\"uploadBtn\", false);\n        console.error(\"Upload error:\", err);\n      }\n    });\n  }\n});\n\n// Only render after login\nauth.onAuthStateChanged(user => {\n  if (!user && protectedPages.includes(currentPage)) {\n    window.location.replace(\"auth.html\");\n    return;\n  }\n  if (user && currentPage === \"auth.html\") {\n    window.location.replace(\"dashboard.html\");\n    return;\n  }\n  if (user && (currentPage === \"dashboard.html\" || currentPage === \"documents.html\")) {\n    renderDashboardSummary(user);\n    renderDocuments(user);\n  }\n});","size_bytes":13993}},"version":2}